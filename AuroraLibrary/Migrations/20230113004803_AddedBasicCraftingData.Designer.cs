// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuroraLibrary.Migrations
{
    [DbContext(typeof(RPGBotDBContext))]
    [Migration("20230113004803_AddedBasicCraftingData")]
    partial class AddedBasicCraftingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AuroraLibrary.DatabaseModels.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Atttribute1Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Atttribute1Value")
                        .HasColumnType("int");

                    b.Property<string>("Atttribute2Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Atttribute2Value")
                        .HasColumnType("int");

                    b.Property<string>("Atttribute3Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Atttribute3Value")
                        .HasColumnType("int");

                    b.Property<string>("Atttribute4Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Atttribute4Value")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Equipped")
                        .HasColumnType("bit");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("AuroraLibrary.DatabaseModels.ItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("ItemModels");
                });

            modelBuilder.Entity("AuroraLibrary.DatabaseModels.Player", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<int?>("AdventureId")
                        .HasColumnType("int");

                    b.Property<int>("CraftingXP")
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<bool?>("PassedAdventure")
                        .HasColumnType("bit");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartedAdventure")
                        .HasColumnType("datetime2");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("AuroraLibrary.DatabaseModels.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedItemId");

                    b.ToTable("ItemRecipies");
                });

            modelBuilder.Entity("AuroraLibrary.DatabaseModels.Item", b =>
                {
                    b.HasOne("AuroraLibrary.DatabaseModels.ItemModel", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuroraLibrary.DatabaseModels.Player", "Owner")
                        .WithMany("Items")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("AuroraLibrary.DatabaseModels.ItemModel", b =>
                {
                    b.HasOne("AuroraLibrary.DatabaseModels.Recipe", null)
                        .WithMany("Materials")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("AuroraLibrary.DatabaseModels.Recipe", b =>
                {
                    b.HasOne("AuroraLibrary.DatabaseModels.ItemModel", "CreatedItem")
                        .WithMany()
                        .HasForeignKey("CreatedItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedItem");
                });

            modelBuilder.Entity("AuroraLibrary.DatabaseModels.Player", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AuroraLibrary.DatabaseModels.Recipe", b =>
                {
                    b.Navigation("Materials");
                });
#pragma warning restore 612, 618
        }
    }
}
